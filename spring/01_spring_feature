▶ spring이란?
  : 엔터프라이즈급 Java 애플리케이션 개발을 쉽고 효율적으로 만들기 위해 설계된 프레임워크.

▶ 주요 특징
    제어의 역전(IoC, Inversion of Control) : 객체의 생성, 생명 주기 관리, 의존성 관리를 개발자가 아닌 프레임워크가 대신 처리.
                                              -> 코드가 특정 구현에 덜 종속되게 하여 "느슨한 결합(Loose Coupling)"을 달성.
    의존성 주입 (DI, Dependency Injection) : IoC를 구현하는 구체적인 방법 중 하나로, 객체 간의 의존 관계를 직접 코드 내에서 생성하는 것이 아니라
                                            "외부(프레임워크)"에서 주입(설정)해주는 방식.
    관점 지향 프로그래밍 (AOP, Aspect-Oriented Programming) : 애플리케이션 전반에 걸쳐 반복적으로 사용되는 기능(예: 로깅, 보안, 트랜잭션 관리)을
                                                            "횡단 관심사(Cross-cutting Concerns)"로 분리하여 모듈화하는 프로그래밍 패러다임.
                                                              -> ex) 회원가입 로직에서 log기능을 분리. 응집도↑ 유지보수성↑
    이식성 및 유연성 : 특정 환경(예: 특정 WAS)에 종속되지 않고, 다양한 환경에서 동작할 수 있음.
                      또한, Spring의 각 기능(모듈)은 독립적이어서 필요한 부분만 선택적으로 사용 가능.

▶ 참고
    : spring-boot는 spring 기반 애플리케이션을 쉽게 만들도록 돕는 도구로, 자동 설정(Auto-configuration), 내장 웹 서버 제공한다.
